uajax_debug=!0,uajax=async(e,s,t={},a={})=>"GET"==e.toUpperCase()?(uajax_debug,new Promise((e=>{$.ajax({method:"GET",url:s,contentType:"application/json",dataType:"json",headers:a,success:(s,t,a)=>{let n=new Response(s,a.status);uajax_debug,e(n)}}).catch((s=>{const t={status:s.status,response:s.responseText};uajax_debug;let a=new Response(t.response,t.status);e(a)}))}))):(uajax_debug,new Promise((n=>{$.ajax({method:e.toUpperCase(),url:s,data:JSON.stringify(t),contentType:"application/json",dataType:"json",headers:a,success:(e,s,t)=>{let a=new Response(e,t.status);uajax_debug,n(a)}}).catch((e=>{const s={status:e.status,response:e.responseText};uajax_debug;let t=new Response(s.response,s.status);n(t)}))}))),uajax.upload=(e,s,t=!1,a="")=>(uajax_debug,new Promise((n=>{$.ajax({xhr:()=>{let e=new window.XMLHttpRequest;return e.upload.addEventListener("progress",!1),e},method:"POST",url:e,data:s,contentType:!1,processData:!1,dataType:"json",success:(e,s,o)=>{let u=new Response(e,o.status);uajax_debug,t&&$(`#${a}`).html("Upload completed!"),n(u)}}).catch((e=>{const s={status:e.status,response:e.responseText};uajax_debug;let t=new Response(s.response,s.status);n(t)}))})));class Response{constructor(e,s){this.body=e,this.status=s}}